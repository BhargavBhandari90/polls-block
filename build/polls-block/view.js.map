{"version":3,"file":"polls-block/view.js","mappings":"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","sources":["webpack://polls-block/external module \"@wordpress/interactivity\"","webpack://polls-block/webpack/bootstrap","webpack://polls-block/webpack/runtime/make namespace object","webpack://polls-block/./src/polls-block/view.js"],"sourcesContent":["module.exports = __WEBPACK_EXTERNAL_MODULE__wordpress_interactivity_8e89b257__;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import { store, getContext } from \"@wordpress/interactivity\";\n\nconst { state } = store(\"buntywp-polls\", {\n\tstate: {\n\t\tget totalVoteCount() {\n\t\t\tconst context = getContext();\n\t\t\treturn context.totalVotes;\n\t\t},\n\t\tget userLoggedin() {\n\t\t\tconst context = getContext();\n\t\t\treturn context.isLoggedIn;\n\t\t},\n\t},\n\tactions: {\n\t\ttoggleVote: () => {\n\t\t\tconst context = getContext();\n\n\t\t\t// Return, if already voted or not loggedin.\n\t\t\tif (context.userVoted || !context.canUserVote) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tlet index = context.item.id;\n\t\t\tcontext.options[index].votes = (context.options[index].votes || 0) + 1;\n\t\t\tcontext.userSelection = index;\n\t\t\tcontext.options = context.options;\n\t\t\tcontext.totalVotes = Number(context.totalVotes + 1);\n\t\t\tcontext.userVoted = true;\n\t\t\tsaveVoteToServer(context);\n\t\t},\n\t\tgetPercentage: () => {\n\t\t\tconst context = getContext();\n\t\t\tif (context.totalVotes === 0) {\n\t\t\t\treturn \"0%\";\n\t\t\t}\n\t\t\tlet index = context.item.id;\n\t\t\tconst percentage =\n\t\t\t\t(context.options[index].votes / context.totalVotes) * 100;\n\t\t\treturn `${percentage.toFixed(0)}%`;\n\t\t},\n\n\t\tgetUserSelection: () => {\n\t\t\tconst context = getContext();\n\t\t\tlet index = context.item.id;\n\t\t\treturn !(\n\t\t\t\tparseInt(context.options[index].id) === parseInt(context.userSelection)\n\t\t\t);\n\t\t},\n\t},\n\tcallbacks: {\n\t\tlogIsPollOpen: () => {\n\t\t\tconst { isOpen } = getContext();\n\t\t},\n\t},\n});\n\n/**\n * Save the vote to the server via AJAX.\n *\n * @param {object} context Poll Context.\n */\nfunction saveVoteToServer(context) {\n\tfetch(state.ajaxUrl, {\n\t\tmethod: \"POST\",\n\t\theaders: {\n\t\t\t\"Content-Type\": \"application/x-www-form-urlencoded\",\n\t\t},\n\t\tbody: new URLSearchParams({\n\t\t\taction: \"save_poll_vote\",\n\t\t\tnonce: state.nonce,\n\t\t\tcontext: JSON.stringify(context),\n\t\t}),\n\t})\n\t\t.then((response) => response.json())\n\t\t.then((data) => {\n\t\t\tconsole.log(\"Vote saved:\", data);\n\t\t})\n\t\t.catch((error) => {\n\t\t\tconsole.error(\"Error saving vote:\", error);\n\t\t});\n}\n"],"names":["store","getContext","state","totalVoteCount","context","totalVotes","userLoggedin","isLoggedIn","actions","toggleVote","userVoted","canUserVote","index","item","id","options","votes","userSelection","Number","saveVoteToServer","getPercentage","percentage","toFixed","getUserSelection","parseInt","callbacks","logIsPollOpen","isOpen","fetch","ajaxUrl","method","headers","body","URLSearchParams","action","nonce","JSON","stringify","then","response","json","data","console","log","catch","error"],"sourceRoot":""}